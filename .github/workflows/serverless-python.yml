name: Deploy Serverless Python
on:
  workflow_dispatch:
    inputs:
      environment:
        description: "Deployment Environment"
        type: choice
        options:
        - development
        - production
jobs:
  Deploy_Lambdas:
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: 18.x
    strategy:
      matrix:
        python-version:
          - 3.8
    steps:  
    - name: Checkout  
      uses: actions/checkout@master
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Cache pip
      uses: actions/cache@v2
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          ${{ runner.os }}-
          
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    
    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-      
    
    - name: Install Node Dependencies
      run: npm install

    - name: serverless deploy     
      uses: bobbymckinnon/actions.serverless-with-python-requirements@master
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        STAGE: ${{ github.event.inputs.environment }}
